syntax = "proto3";
package profile;
option go_package = ".;pb";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


service ProfileService {
  rpc CreateProfile(CreateProfileReq) returns (Profile);
  rpc GetProfile(GetProfileReq) returns (Profile);
  rpc BatchGetProfiles(BatchGetProfilesReq) returns (BatchGetProfilesRes); // もらったIDの配列の順番でprofileの配列を返す
  rpc UpdateProfile(UpdateProfileReq) returns (Profile);
  rpc DeleteProfile(DeleteProfileReq) returns (google.protobuf.Empty);
}

enum Sex {
  SEX_UNSPECIFIED = 0;
  MALE = 1;
  FEMALE = 2;
}

message Profile {
  int64 id = 1;
  string name = 2;
  string introduction = 3;
  Sex sex = 4;
  int64 user_id = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message GetProfileReq {
  int64 user_id = 1 [(validate.rules).int64.gte = 1];
}

message BatchGetProfilesReq {
  repeated int64 user_ids = 1 [(validate.rules).repeated.items.int64.gte = 1, (validate.rules).repeated.min_items = 1, (validate.rules).repeated.max_items = 30, (validate.rules).repeated.unique = true];
}

message BatchGetProfilesRes {
  repeated Profile profiles = 1;
}

message CreateProfileReq {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
  string introduction = 2 [(validate.rules).string = {min_len: 1, max_len: 1000}];
  Sex sex = 3 [(validate.rules).enum = {not_in: [0]}, (validate.rules).enum.defined_only = true];
  int64 user_id = 4 [(validate.rules).int64.gte = 1];
}

message UpdateProfileReq {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 10}];
  string introduction = 2 [(validate.rules).string = {min_len: 1, max_len: 1000}];
  int64 user_id = 3 [(validate.rules).int64.gte = 1];
  
}

message DeleteProfileReq {
  int64 user_id = 1 [(validate.rules).int64.gte = 1];
}